version: '3.2'

services:

  db:
    image: mongo:4.2.6
    hostname: db-host
    privileged: true
    volumes:
      - mongo-data:/data/db
      - type: bind
        source: ./db/mongo/mongod.conf
        target: /etc/mongod.conf
    expose:
      - "27017"
    command: [ "-f", "/etc/mongod.conf" ]
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_NAME}
    networks:
      - network

  db-migrations:
    image: ${IMAGE_REGISTRY_URL}/${COMPOSE_PROJECT_NAME}-mongo-migrations
    depends_on:
      - db
    working_dir: /mongo_migrations
    volumes:
      - ./db/mongo/migrations/migrations:/mongo_migrations/migrations
    environment:
      DB_URI: ${DB_URI}
      DB_NAME: ${DB_NAME}
      DB_ROOT_USERNAME: ${DB_ROOT_USERNAME}
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - network

  api:
    image: ${IMAGE_REGISTRY_URL}/${COMPOSE_PROJECT_NAME}
    hostname: api-host
    privileged: true
    working_dir: /code
    volumes:
      - ./src/server:/code
    ports:
      - "${API_PORT}:${API_PORT}"
    expose:
      - "${API_PORT}"
    entrypoint: [ "go", "run", "main.go" ]
    environment:
      - API_PORT=${API_PORT}
      - API_DEV_MODE=${API_DEV_MODE}
      - DB_URI=${DB_URI}
      - DB_ROOT_USERNAME=${DB_ROOT_USERNAME}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_NAME=${DB_NAME}
    networks:
      - network

  swagger-editor:
    image: swaggerapi/swagger-editor
    privileged: true
    volumes:
      - type: bind
        source: ./openapi.yaml
        target: /etc/openapi.yaml
    ports:
      - "${SWAGGER_PORT}:8080"
    environment:
      - SWAGGER_FILE=/etc/openapi.yaml

  mockserver:
    image: danielgtaylor/apisprout
    privileged: true
    volumes:
      - type: bind
        source: ./openapi.yaml
        target: /etc/openapi.yaml
    ports:
      - "${MOCKSERVER_PORT}:8000"
    entrypoint:
      - "apisprout"
      - "--validate-server"
      - "/etc/openapi.yaml"

networks:
  network:


volumes:
  mongo-data:
