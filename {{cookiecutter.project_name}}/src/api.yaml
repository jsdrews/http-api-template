openapi: 3.0.0
info:
  title: Testing
  version: 1.0.0
servers:
  - url: "http://localhost:8888/api/v1"
    description: Running locally for development
  - url: "http://localhost:8887/api/v1"
    description: Mockserver for quick development
paths:
  /health:
    get:
      tags:
        - health
      summary: Server Health Check
      operationId: getHealth
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '503':
          description: Server Unavailable
        '500':
          description: Internal Server Error
  /users:
    get:
      tags:
        - user
      summary: Get Users
      operationId: getUsers
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: sort
          schema:
            type: string
          description: Sort by this field
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
    post:
      tags:
        - user
      summary: Add Users
      operationId: addUsers
      requestBody:
        description: Create a new pet in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      # security:
      #   - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAdded'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 
  schemas:
    HealthCheck:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          example: OK
    User:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
          example: John
          pattern: \D+
          format: alpha
          x-oapi-codegen-extra-tags:
            validate: required,alpha
        lastName:
          type: string
          example: James
          pattern: \D+
          format: alpha
          x-oapi-codegen-extra-tags:
            validate: required,alpha
        email:
          type: string
          format: email
          example: john@email.com
          x-oapi-codegen-extra-tags:
            validate: required,email
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
      example:
        - email: sholmes@email.com
          firstName: Sherlock
          lastName: Holmes
        - email: jwatson@email.com
          firstName: John
          lastName: Watson
    UsersAdded:
      type: object
      required:
        - status
        - numRequested
        - numExisted
        - numAdded
      properties:
        status:
          type: string
          example: success
        numRequested: 
          type: integer
          example: 2
        numExisted:
          type: integer
          example: 1
        numAdded:
          type: integer
          example: 1
