# https://taskfile.dev

version: '3'

includes:
  builds:
    taskfile: ./builds.yaml

vars:
  SUBTASKS_IMG_NAMESPACE: ${COMPOSE_PROJECT_NAME}-sub-tasks

tasks:

  openapi-generator-cli:
    desc: openapi-generator-cli
    deps:
      - builds:build-openapi-generator-cli
    silent: true
    cmds:
      - |
        docker run --rm -it \
        -v $PWD:/home \
        -w /home \
        {{ .SUBTASKS_IMG_NAMESPACE }}/openapi-generator-cli \
        {{ .CLI_ARGS }}

  oapi-codegen:
    deps:
      - builds:build-oapi-codegen
    cmds:
      - |
        docker run --rm \
        -v $PWD:/home \
        -w /home \
        {{ .SUBTASKS_IMG_NAMESPACE }}/oapi-codegen \
        {{ .CLI_ARGS }}
    desc: Run oapi-codegen
    silent: true

  openapi-json-schemextractor:
    desc: Extract schema from api spec
    deps:
      - builds:build-openapi-json-schemextractor
    silent: true
    cmds:
      - |
        docker run --rm \
        -v $PWD:/home \
        -w /home \
        {{ .SUBTASKS_IMG_NAMESPACE }}/openapi-json-schemextractor \
        {{ .CLI_ARGS }}

  redocly:
    desc: redocly-cli for openapi manipulation
    deps:
      - builds:build-redocly
    silent: true
    cmds:
      - |
        docker run --rm \
        -v $PWD:/home \
        -w /home \
        {{ .SUBTASKS_IMG_NAMESPACE }}/redocly \
        {{ .CLI_ARGS }}

  jq:
    desc: "Run jq on api spec"
    deps:
      - builds:build-jq
    silent: true
    cmds:
      - |
        docker run --rm -i \
        -v $PWD:/home \
        -w /home \
        {{ .SUBTASKS_IMG_NAMESPACE }}/jq \
        {{ .CLI_ARGS }}

  datamodel-code-generator:
    desc: "Generate pydantic models from api spec"
    deps:
      - builds:build-datamodel-code-generator
    silent: true
    cmds:
      - |
        docker run --rm -it \
        -v $PWD:/home \
        -w /home \
        {{ .SUBTASKS_IMG_NAMESPACE }}/datamodel-code-generator \
        {{ .CLI_ARGS }}
  
  json-schema-faker:
    desc: "Generate fake data from api spec"
    deps:
      - builds:build-json-schema-faker
    silent: true
    cmds:
      - |
        docker run --rm -it \
        -v $PWD:/home \
        -w /home \
        {{ .SUBTASKS_IMG_NAMESPACE }}/json-schema-faker \
        {{ .CLI_ARGS }}

  jsonsubschema:
    desc: "Check if a jsonschema definition is compatible with another"
    deps:
      - builds:build-jsonsubschema
    silent: true
    cmds:
      - |
        docker run --rm -it \
        -v $PWD:/home \
        -w /home \
        {{ .SUBTASKS_IMG_NAMESPACE }}/jsonsubschema \
        {{ .CLI_ARGS }}

  imgs:
    deps:
      - sub-tasks:builds:_docker_preconditions
    cmds:
      - docker images "{{ .SUBTASKS_IMG_NAMESPACE }}/*"
    desc: "Show all images"
    silent: true

  clean-subtasks:
    desc: "Remove all images"
    deps:
      - builds:_docker_preconditions
    silent: true
    cmds:
      - |
        docker rmi -f \
        $(docker images "{{ .SUBTASKS_IMG_NAMESPACE }}/*" -q)
