openapi: 3.0.0
info:
  title: Testing
  version: 1.0.0
servers:
- url: http://localhost:8888/api/v1
  description: Running locally for development
- url: http://localhost:8887/api/v1
  description: Mockserver for quick development
paths:
  /health:
    get:
      tags:
      - health
      summary: Server Health Check
      operationId: getHealth
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        "500":
          description: Internal Server Error
        "503":
          description: Server Unavailable
  /users:
    get:
      tags:
      - user
      summary: Get Users
      operationId: getUsers
      parameters:
      - name: offset
        in: query
        description: The number of items to skip before starting to collect the result
          set
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: The numbers of items to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: sort
        in: query
        description: Sort by this field
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
    post:
      tags:
      - user
      summary: Add Users
      operationId: addUsers
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAdded'
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
components:
  schemas:
    HealthCheck:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          example: OK
      example:
        status: OK
    User:
      required:
      - email
      - firstName
      - lastName
      type: object
      properties:
        firstName:
          pattern: \D+
          type: string
          example: John
          x-oapi-codegen-extra-tags:
            validate: "required,alpha"
        lastName:
          pattern: \D+
          type: string
          example: James
          x-oapi-codegen-extra-tags:
            validate: "required,alpha"
        email:
          type: string
          example: john@email.com
          x-oapi-codegen-extra-tags:
            validate: "required,email"
    Users:
      type: array
      example:
      - email: sholmes@email.com
        firstName: Sherlock
        lastName: Holmes
      - email: jwatson@email.com
        firstName: John
        lastName: Watson
      items:
        $ref: '#/components/schemas/User'
      x-schema-name: Users
    UsersAdded:
      required:
      - numAdded
      - numExisted
      - numRequested
      - status
      type: object
      properties:
        status:
          type: string
          example: success
        numRequested:
          type: integer
          example: 2
        numExisted:
          type: integer
          example: 1
        numAdded:
          type: integer
          example: 1
      example:
        numRequested: 2
        numExisted: 1
        numAdded: 1
        status: success
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
