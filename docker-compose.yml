version: '3.2'

services:

  mongo:
    image: mongo
    hostname: ${MONGO_HOSTNAME}
    privileged: true
    volumes:
      - mongo-data:/data/db
      - type: bind
        source: ./src/mongo/mongod.conf
        target: /etc/mongod.conf
    expose:
      - "27017"
    command: [ "-f",  "/etc/mongod.conf" ]
    env_file:
      - .env
    networks:
      - network

  app:
    image: golang:1.20
    # build: src/app
    hostname: ${APP_HOSTNAME}
    privileged: true
    working_dir: /app
    volumes:
      - ./src/app:/app
    ports:
      - "${APP_PORT}:${APP_PORT}"
    expose:
      - "${APP_PORT}"
    entrypoint: [ "go", "run", "main.go" ]
    env_file:
      - .env
    networks:
      - network

  swagger-editor:
    image: swaggerapi/swagger-editor
    privileged: true
    volumes:
      - type: bind
        source: ./src/app/api.yaml
        target: /etc/api.yaml
    ports:
      - "8889:8080"
    environment:
      - SWAGGER_FILE=/etc/api.yaml

  mockserver:
    image: danielgtaylor/apisprout
    privileged: true
    volumes:
      - type: bind
        source: ./src/app/api.yaml
        target: /etc/api.yaml
    ports:
      - "8887:8000"
    entrypoint: 
      - "apisprout"
      - "--validate-server"
      - "/etc/api.yaml"
    environment:
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/etc/mockserver/initialization.json

networks:
  network:

volumes:
  mongo-data:
